---
title: "Developer documentation"
---

["cruise-control" (restricted link)](https://bitbucket.csiro.au/projects/SF/repos/cruise-control/browse) contains detailed instructions for building and maintaining the software stack, and deploying it on CSIRO organisational infrastructure. Most of its content is also available in previous public links.

# Technical blog posts

A few posts that are related to this hydrologic simulation software stack:

* [Presenting doxygen C++ API documentation via MkDocs with doxybook2](https://jmp75.github.io/work-blog/posts/2022-08-22-doxygen-doxybook-mkdocs.html)
* [Generate programming language bindings to a C API](https://jmp75.github.io/work-blog/posts/2022-09-03-c-api-wrapper-generation.html)
* [Azure devops CI pipeline for hydrologic forecasting software](https://jmp75.github.io/work-blog/posts/2022-07-31-azure-pipeline-vcpp-stack.html)
* [Compiling C++ libraries to WebAssembly - Part 1](https://jmp75.github.io/work-blog/posts/2022-09-11-cpp-code-wasm.html)

# Release and versioning

The streamflow forecasting software stack comprise a dozen or so public or private `git` repositories. Co-evolving these repositories is not trivial. Each component may have a versioning rationale that is orthogonal to others. However for reproducibility we need to have "meta-releases" that are aggregates of components with a clear, traceable lineage.

As of 2023-01:

* Diagram that explains the overarching system to release/tag.
